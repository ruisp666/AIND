{
    "critiques": {
        "680": {
            "rubric_items": {
                "5510": {
                    "result": "failed",
                    "autograded": true,
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 6. Test the interface of AlphaBetaPlayer.get_move()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 361, in get_move\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 7. Test functionality of AlphaBetaPlayer.alphabeta()\n----------------------------------------------------------------------\nAssertionError: False is not true : Your AlphaBetaAgent.alphabeta function returned a move that was not the optimal move for the given heurisitc. Make sure that you choose the first branch with the max score at the top level; branches searched later that return the same max score may only be returning an upper bound.\nExpected Best Move:\n(7, 1)\nYour Selection: (8, 2)\n\nTest Case Details:\n------------------\nHeuristic: center_distance\nDepth limit: 1\nInitial Board State:\n     0   1   2   3   4   5   6   7   8\n0  |   |   |   |   |   |   |   |   |   | \n1  |   |   |   |   |   |   |   |   |   | \n2  |   |   |   | - |   | - | - |   |   | \n3  |   |   |   | - | 2 | - |   |   |   | \n4  |   |   | - |   |   | - | - |   |   | \n5  |   |   | - |   |   |   | - |   |   | \n6  |   |   |   | 1 | - | - |   |   |   | \n7  |   |   |   |   |   |   |   |   |   | \n8  |   |   |   |   |   |   |   |   |   | \n\ngame._board_state:\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 33]\n\n\n\nFailed Test: 8. Test that alphabeta() raises SearchTimeout when the timer expires\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 626, in alphabeta\n    v = self.min_value1(game.forecast_move(m), alpha, beta, 0, depth)\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 533, in min_value1\n    v = min(v, self.max_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n\n                     ...lines elided for space...                     \n\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 533, in min_value1\n    v = min(v, self.max_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 510, in max_value1\n    v = max(v, self.min_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 533, in min_value1\n    v = min(v, self.max_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 510, in max_value1\n    v = max(v, self.min_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 533, in min_value1\n    v = min(v, self.max_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 510, in max_value1\n    v = max(v, self.min_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 533, in min_value1\n    v = min(v, self.max_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 510, in max_value1\n    v = max(v, self.min_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 533, in min_value1\n    v = min(v, self.max_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 510, in max_value1\n    v = max(v, self.min_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 533, in min_value1\n    v = min(v, self.max_value1(game.forecast_move(move), alpha, beta, current_depth+1, depth_cutoff))\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 502, in max_value1\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 502, in <listcomp>\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_ugywsozl/testcases.py\", line 575, in score\n    \"each call to avoid timeout. {1}\").format(search_name, self.timer())\nRuntimeError: Your alphabeta agent called the score_fn after the timer fell below 0 milliseconds remaining.  If you call any helper functions in your alphabeta search, then you need to check the timer inside each call to avoid timeout. -0.39591699999982666\n\n\nFailed Test: 9. Test iterative deepening in AlphaBetaPlayer.get_move()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 361, in get_move\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 10. Test that AlphaBetaPlayer successfully plays a full game\n----------------------------------------------------------------------\nTraceback (most recent call last):\nNotImplementedError\n\nDuring handling of the above exception, another exception occurred:\n\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\nException: \n\n\nFailed Test: 12. Test output interface of custom_score_2()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 77, in custom_score_2\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 13. Test output interface of custom_score_3()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_ugywsozl/workspace/game_agent.py\", line 105, in custom_score_3\n    raise NotImplementedError\nNotImplementedError\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n1. Test output interface of MinimaxPlayer.minimax():                   .\n2. Test functionality of MinimaxPlayer.minimax():                      .\n3. Test that minimax() raises SearchTimeout when the timer expires:    .\n4. Test that MinimaxPlayer successfully plays a full game:             .\n5. Test interface of AlphaBetaPlayer.alphabeta():                      .\n6. Test the interface of AlphaBetaPlayer.get_move():                   E\n7. Test functionality of AlphaBetaPlayer.alphabeta():                  F\n8. Test that alphabeta() raises SearchTimeout when the timer expires:  E\n9. Test iterative deepening in AlphaBetaPlayer.get_move():             E\n10. Test that AlphaBetaPlayer successfully plays a full game:          F\n11. Test output interface of custom_score():                           .\n12. Test output interface of custom_score_2():                         E\n13. Test output interface of custom_score_3():                         E\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```"
                },
                "7303": {
                    "result": "failed",
                    "autograded": true,
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 14. Submission includes heuristic_analysis.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named heuristic_analysis.pdf for review.\n\n\nFailed Test: 15. Submission includes research_review.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named research_review.pdf for review.\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n14. Submission includes heuristic_analysis.pdf:                        F\n15. Submission includes research_review.pdf:                           F\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```"
                }
            }
        }
    }
}