{
    "critiques": {
        "680": {
            "rubric_items": {
                "7303": {
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 14. Submission includes heuristic_analysis.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named heuristic_analysis.pdf for review.\n\n\nFailed Test: 15. Submission includes research_review.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named research_review.pdf for review.\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n14. Submission includes heuristic_analysis.pdf:                        F\n15. Submission includes research_review.pdf:                           F\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```",
                    "autograded": true,
                    "result": "failed"
                },
                "5510": {
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 1. Test output interface of MinimaxPlayer.minimax()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 321, in minimax\n    key=lambda m: self.min_value(game.forecast_move(m),depth+start_level))\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 321, in <lambda>\n    key=lambda m: self.min_value(game.forecast_move(m),depth+start_level))\n\n                     ...lines elided for space...                     \n\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 238, in <listcomp>\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 262, in max_value\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 262, in <listcomp>\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 238, in min_value\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 238, in <listcomp>\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 262, in max_value\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 262, in <listcomp>\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 238, in min_value\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 238, in <listcomp>\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 262, in max_value\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 262, in <listcomp>\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 234, in min_value\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 234, in <listcomp>\n    for m in game.get_legal_moves()])\n  File \"/home/vmuser_lnkwepfg/testcases.py\", line 575, in score\n    \"each call to avoid timeout. {1}\").format(search_name, self.timer())\nRuntimeError: Your minimax agent called the score_fn after the timer fell below 0 milliseconds remaining.  If you call any helper functions in your minimax search, then you need to check the timer inside each call to avoid timeout. -0.022790000000895816\n\n\nFailed Test: 4. Test that MinimaxPlayer successfully plays a full game\n----------------------------------------------------------------------\nTraceback (most recent call last):\nRuntimeError: Timeout: 467.2050ms exceeds 25ms limit\n\nDuring handling of the above exception, another exception occurred:\n\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\nException: Timeout: 467.2050ms exceeds 25ms limit\n\n\nFailed Test: 5. Test interface of AlphaBetaPlayer.alphabeta()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 422, in alphabeta\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 6. Test the interface of AlphaBetaPlayer.get_move()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 371, in get_move\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 7. Test functionality of AlphaBetaPlayer.alphabeta()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 422, in alphabeta\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 8. Test that alphabeta() raises SearchTimeout when the timer expires\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 422, in alphabeta\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 9. Test iterative deepening in AlphaBetaPlayer.get_move()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 371, in get_move\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 10. Test that AlphaBetaPlayer successfully plays a full game\n----------------------------------------------------------------------\nTraceback (most recent call last):\nNotImplementedError\n\nDuring handling of the above exception, another exception occurred:\n\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\nException: \n\n\nFailed Test: 12. Test output interface of custom_score_2()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 77, in custom_score_2\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 13. Test output interface of custom_score_3()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_lnkwepfg/workspace/game_agent.py\", line 105, in custom_score_3\n    raise NotImplementedError\nNotImplementedError\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n1. Test output interface of MinimaxPlayer.minimax():                   E\n2. Test functionality of MinimaxPlayer.minimax():                      .\n3. Test that minimax() raises SearchTimeout when the timer expires:    .\n4. Test that MinimaxPlayer successfully plays a full game:             F\n5. Test interface of AlphaBetaPlayer.alphabeta():                      E\n6. Test the interface of AlphaBetaPlayer.get_move():                   E\n7. Test functionality of AlphaBetaPlayer.alphabeta():                  E\n8. Test that alphabeta() raises SearchTimeout when the timer expires:  E\n9. Test iterative deepening in AlphaBetaPlayer.get_move():             E\n10. Test that AlphaBetaPlayer successfully plays a full game:          F\n11. Test output interface of custom_score():                           .\n12. Test output interface of custom_score_2():                         E\n13. Test output interface of custom_score_3():                         E\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```",
                    "autograded": true,
                    "result": "failed"
                }
            }
        }
    }
}